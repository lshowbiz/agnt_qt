<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd ">
	<description>IBM MQ</description>

	<!-- WebSphere MQ Connection Factory -->
	<bean id="mqConnectionFactory" class="com.ibm.mq.jms.MQConnectionFactory">
		<property name="hostName" value="${app.mq.hostName}" />
		<property name="queueManager" value="${app.mq.queueManager}" />
		<property name="channel" value="${app.mq.channel}" />
		<property name="port" value="${app.mq.port}" />
		<property name="transportType" value="${app.mq.transportType}" />
	</bean>

	<!-- 使用了 CachingConnectionFactory， 为发送提供缓存，可以提高效率 -->
	<!-- JMS Queue Connection Factory -->
	<bean id="jmsQueueConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="mqConnectionFactory" />
		<property name="sessionCacheSize">
			<value>${app.jms.connectionFactory.sessionCacheSize} </value>
		</property>
	</bean>

	<!-- JMS Queue Template -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsQueueConnectionFactory" />
		<property name="messageConverter" ref="messageConverter" />
	</bean>

	<bean id="messageConverter" class="com.joymain.ibmmq.MqMessageConverter" />

	<bean id="orderQueue" class="com.ibm.mq.jms.MQQueue">
		<property name="baseQueueName" value="${queue.name}" />
	</bean>

	<bean name="messageConsumer" class="com.joymain.ibmmq.MessageConsumer">
		<property name="handlers">
			<map>
				<entry key="com.joymain.ibmmq.InnerMessage">
					<bean class="com.joymain.ibmmq.InnerHandler"></bean>
				</entry>
				<entry key="com.joymain.ibmmq.JpoMemberOrderCheckModel">
					<bean class="com.joymain.ibmmq.JpoMemberOrderCheckModelHandler"></bean>
				</entry>
				<entry key="java.util.HashMap">
					<bean class="com.joymain.ibmmq.MapHandler"></bean>
				</entry>
			</map>
		</property>
	</bean>

	<!--消息监听容器 -->
	<bean id="messageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="mqConnectionFactory" />
		<property name="destination" ref="orderQueue" />
		<property name="messageListener" ref="messageListener" />

		<property name="cacheLevelName" value="CACHE_CONSUMER" />
		<property name="taskExecutor" ref="jmsListenerTaskExecutor" />
		<property name="concurrentConsumers">
			<value>${app.jms.listenerContainer.concurrentConsumers}</value>
		</property>
		<property name="maxConcurrentConsumers">
			<value>${app.jms.listenerContainer.maxConcurrentConsumers}</value>
		</property>
	</bean>

	<!-- 消息消费监听器 -->
	<bean id="messageListener"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg>
			<ref bean="messageConsumer" />
		</constructor-arg>
		<property name="messageConverter" ref="messageConverter" />
		<property name="defaultListenerMethod" value="handMessage" />
	</bean>

	<!-- 监听时配置了线程池，Spring默认使用 SimpleAsyncTaskExecutor,每次都会创建新的线程，开销较大，故配置了固定的线程池提高效率 -->
	<bean id="jmsListenerTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize">
			<value>${app.jmsListenerExecutor.corePoolSize}</value>
		</property>
		<property name="keepAliveSeconds">
			<value>${app.jmsListenerExecutor.keepAliveSeconds}</value>
		</property>
		<property name="maxPoolSize">
			<value>${app.jmsListenerExecutor.maxPoolSize}</value>
		</property>
		<property name="queueCapacity">
			<value>${app.jmsListenerExecutor.queueCapacity}</value>
		</property>
		<property name="threadNamePrefix" value="jmsListenerTaskExecutor"/>
	</bean>

	<!-- 消息生产者 -->
	<bean id="messageProducer" class="com.joymain.ibmmq.MessageProducer">
		<property name="messageQueue" ref="orderQueue" />
		<property name="jmsTemplate" ref="jmsTemplate" />
	</bean>
</beans>
